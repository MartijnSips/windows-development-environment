# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|

  unless Vagrant.has_plugin?("vagrant-vbguest")
    raise 'vbguest plugin missing, install by using "vagrant plugin install vagrant-vbguest"'
  end
	
  # Guest additions plugin config
  config.vbguest.auto_update = true
  config.vbguest.no_remote = false

  unless Vagrant.has_plugin?("vagrant-reload")
    raise 'reload plugin missing, install by using "vagrant plugin install vagrant-reload"'
  end

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "vdelarosa/windows-10"

  config.vm.guest = :windows
  config.vm.communicator = "winrm"
  config.vm.boot_timeout = 600
  config.vm.graceful_halt_timeout = 600

  config.vm.network :forwarded_port, guest: 3389, host: 3389
  config.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true

  config.vm.provider "virtualbox" do |vm|
    vm.name = "Windows Development Environment"
    vm.gui = true
    vm.cpus = 2
    vm.memory = 2048
	
	# Disable 3d acceleration because some programs crash on it.
    vm.customize ["modifyvm", :id, "--accelerate3d", "off"]

    # Enabling copy/paste to/from VM
    vm.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
    vm.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
  end
  
  #config.vm.synced_folder "#{ENV['USERPROFILE']}\\Documents", 'c:\\users\\vagrant\\Documents', owner: "vagrant", group: "vagrant", create: true
  #config.vm.synced_folder "#{ENV['USERPROFILE']}\\Downloads", 'c:\\users\\vagrant\\Downloads', owner: "vagrant", group: "vagrant", create: true

  config.vm.synced_folder "scripts", 'c:\\users\\vagrant\\scripts', create: true, owner: "vagrant", group: "vagrant"
  config.vm.synced_folder "Host", 'c:\\users\\vagrant\\Host', create: true, owner: "vagrant", group: "vagrant"

  config.vm.provision "shell", privileged: true, inline: <<-SHELL
  
    # Activate windows
    Write-Host ">>> Fill in serial TODO ..." -foreground Green
	# TODO!!! Fill in your windows 10 serial number here ...
	
	# Desktop icons can be a little bit smaller
    Write-Host ">>> Changing the desktop icons ..." -foreground Green
	Import-Module "c:\\users\\vagrant\\scripts\\ChangeDesktopIconSize.psm1"	
	ChangeDesktopIconSize -IconSize 24
	
	# Use small taskbar icons
    Write-Host ">>> Using small taskbar icons ..." -foreground Green
	Import-Module "c:\\users\\vagrant\\scripts\\UseSmallTaskbarIcons.psm1"	
	UseSmallTaskbarIcons
	
	Write-Host ">>> Switch keyboard layout ..." -foreground Green
	Set-WinUserLanguageList -LanguageList en-US -force
  SHELL

  config.vm.provision :reload
  
  config.vm.provision "shell", privileged: true, inline: <<-SHELL
    # Install all latest windows updates
    Write-Host ">>> Running all windows updates ..." -foreground Green
    Invoke-Expression -Command:"c:\\users\\vagrant\\scripts\\win-updates.ps1"
  SHELL

  config.vm.provision :reload
  
  config.vm.provision "shell", privileged: true, inline: <<-SHELL
    Write-Host ">>> Enabling some windows features ..." -foreground Green
	Enable-WindowsOptionalFeature -online -featurename IIS-WebServerRole -All -NoRestart
    Enable-WindowsOptionalFeature -online -featurename IIS-ManagementScriptingTools -All -NoRestart
    Enable-WindowsOptionalFeature -online -featurename IIS-HttpRedirect -All -NoRestart
    Enable-WindowsOptionalFeature -online -featurename WCF-HTTP-Activation45 -All -NoRestart
    Enable-WindowsOptionalFeature -online -featurename WCF-TCP-Activation45 -All -NoRestart
    Enable-WindowsOptionalFeature -online -featurename WCF-Pipe-Activation45 -All -NoRestart
    Enable-WindowsOptionalFeature -online -featurename WCF-MSMQ-Activation45 -All -NoRestart
  SHELL

  config.vm.provision :reload
  
  config.vm.provision "shell", privileged: true, inline: <<-SHELL
    Write-Host ">>> Installing chocolatey ..." -foreground Green
	iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))
  SHELL

  config.vm.provision "shell", privileged: true, inline: <<-SHELL
    Write-Host ">>> Installing development tools ..." -foreground Green
    choco install git -y
	choco install soapui -y
	choco install mssqlservermanagementstudio2014express -y
	choco install sql-server-management-studio -y
	choco install postgresql -y
	choco install pgadmin4 -y
	choco install notepadplusplus -y
#	choco install fiddler4 -y
	choco install google-chrome-x64 -y
	choco install firefox -y
	choco install paint.net -y
	choco install eclipse -y
	choco install maven -y
	choco install gow -y
	choco install postman -y
	choco install intellijidea-community -y
	choco install winmerge -y
	choco install visualstudio2017enterprise -y
	choco install visualstudio2017-workload-netweb -y
	choco install visualstudio2017-workload-manageddesktop -y
#	choco install visualstudio2017-workload-netcoretools -y
#	choco install visualstudio2017-workload-webbuildtools -y
#	choco install visualstudio2017-workload-webcrossplatform -y
#	choco install visualstudio2017-workload-azure -y
    choco install specflow -y
	choco install azure-cli -y
	choco install visualstudiocode -y
  SHELL
  
#  config.vm.provision "shell", privileged: true, inline: <<-SHELL
#    Write-Host ">>> Pinning some applications to the taskbar ..." -foreground Green
#    Import-Module "c:\\users\\vagrant\\scripts\\Pinned-Applications.psm1"
#    Set-PinnedApplication -Action PinToTaskbar -FilePath "C:\\Program Files\\Mozilla Firefox\\firefox.exe"
#    Set-PinnedApplication -Action PinToTaskbar -FilePath "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
#	Set-PinnedApplication -Action PinToTaskbar -FilePath "C:\\Program Files (x86)\\Microsoft SQL Server\\120\\Tools\\Binn\\ManagementStudio\\Ssms.exe"
#    #Set-PinnedApplication -Action PinToTaskbar -FilePath "C:\\Program Files (x86)\\Fiddler2\\Fiddler.exe"
#    Set-PinnedApplication -Action PinToTaskbar -FilePath "C:\\Program Files\\SmartBear\\SoapUI-5.4.0\\bin\\SoapUI-5.4.0.exe"
#    Set-PinnedApplication -Action PinToTaskbar -FilePath c:\\windows\\system32\\inetsrv\\InetMgr.exe
#    Set-PinnedApplication -Action PinToTaskbar -FilePath "C:\\Program Files (x86)\\Notepad++\\notepad++.exe"
#    Set-PinnedApplication -Action PinToTaskbar -FilePath c:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe
#    Set-PinnedApplication -Action PinToTaskbar -FilePath c:\\windows\\system32\\cmd.exe
#	Import-Module 'c:\\users\\vagrant\\scripts\\Set-RvShortcutToRunAsAdministrator.psm1'
#	Set-RvShortcutToRunAsAdministrator -Path 'C:\\Users\\vagrant\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick Launch\\User Pinned\\TaskBar\\Windows Command Processor.lnk' -Verbose
#	Set-RvShortcutToRunAsAdministrator -Path 'C:\\Users\\vagrant\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick Launch\\User Pinned\\TaskBar\\Windows PowerShell.lnk' -Verbose
#  SHELL
  
  config.vm.provision :reload
  
  # TODO
  # pin apps to taskbar
  # fiddler
  # Specflow plugin
  # Eclipse plugins 
  #  checkstytle
  #  cucumber
  #  darkest dark theme
  #  less 
  #  spotbugs
  
  
end